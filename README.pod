=head1 NAME

pacutils - utility library for libalpm front-ends

=head1 SYNOPSIS

 pu_config_t *config = pu_config_new_from_file("/etc/pacman.conf");
 alpm_handle_t *handle = pu_initialize_handle_from_config(config);
 alpm_list_t *syncdbs = pu_register_syncdbs(config->repos);

 alpm_option_set_progresscb(handle, pu_cb_progress);
 alpm_option_set_dlcb(handle, pu_cb_download);

 /* do something with handle... */

 alpm_list_free(sync_dbs);
 alpm_release(handle);
 pu_config_free(config);

B<pacutils> encapsulates several of the common tasks that most users of
I<libalpm> need to perform, such as parsing F<pacman.conf> and providing
standard output functions for callbacks.  The included programs can also be
used as guides for how to accomplish particular actions using I<libalpm>.

=head1 DESCRIPTION

=head2 Configuration Parsing

=over

=item pu_config_t *pu_config_new_from_file(const char *filename);

Parse a I<pacman> configuration file into a C<pu_config_t> structure.  B<Note:>
this is the final configuration as parsed by I<pacman>.  C<Include> directives
will be processed, defaults are set, C<$repo> and C<$arch> will be replaced in
C<Server> directives and C<Architecture> will be replaced if set to C<auto>.

=item void pu_config_free(pu_config_t *config);

=item alpm_handle_t *pu_initialize_handle_from_config(pu_config_t *config);

=back

=head2 Repositories

=over

=item alpm_db_t *pu_register_syncdb(pu_repo_t *repo);

=item alpm_list_t *pu_register_syncdbs(alpm_list_t *repos);

=item void pu_repo_free(pu_repo_t *repo);

=back

=head2 Callbacks

=over

=item const char *pu_msg_progress(alpm_progress_t event);

=item void pu_cb_progress(alpm_progress_t event, const char *pkgname,
            int percent, size_t total, size_t current);

=item void pu_cb_download(const char *filename, off_t xfered, off_t total);

=back

=head1 PROGRAMS

There are several programs located in F<src/>.  Refer to each program's
documentation for more information.

=over

=item pacconf

Query I<pacman>'s configuration file.  Useful for shell scripts:

 dbpath=$(pacconf dbpath)
 color=$(pacconf color)
 [[ -n $color ]] && ... # print something in color

B<Note:> this is the final configuration as parsed by I<pacman>.  C<Include>
directives will be processed, defaults are set, C<$repo> and C<$arch> will be
replaced in C<Server> directives and C<Architecture> will be replaced if set to
C<auto>.

=item pacsync

Synchronize the system with registered sync repositories.  Updates the
repository databases and performs a sysupgrade.  Equivalent to C<pacman -Syu>.

=item pacinstall

Install packages from sync repositories, similar to C<< pacman -S <pkgs> >>.

=item pacinfo

Display basic information for installed packages, similar to
C<< pacman -Qi <pkg> >>.

=item pacsift

Package search/filter tool.

=item pacfile

Display information about a file.  Includes information from C<pacman -Qo>,
C<pacman -Qkk>, and C<pacman -Qii>.

=item pactrans

Install/remove packages in a single transaction.

B<NOTE:> I<alpm> support for installation and removal in a single transaction
is flaky; some options may be ignored.

=item paclog

Filter pacman log entries.

To safely reduce the size of B<pacman>'s log while retaining important entries
use:

 paclog --warnings --action=all --after="$(date -Idate --date='6 months ago')" > newlog

=back

=head1 BUGS

Not implemented yet:

=over

=item globs in Include directives

=item error reporting

=back

=head1 TODO

=over

=item add callback context to alpm and add event callback with logging

=item fix alpm support for "universal transactions"

=back

=head1 COPYRIGHT AND LICENSE

Copyright (c) 2012-2013 Andrew Gregory

pacutils is distributed under the terms of the MIT license.  See F<COPYING> for
details.
